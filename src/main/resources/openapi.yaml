openapi: 3.0.0
info:
  title: Fridge Tracker API
  version: 1.0.0

tags:
  - name: auth
    description: Authentication endpoints
  - name: items
    description: Manage your custom item definitions
  - name: fridges
    description: Manage multiple fridges
  - name: fridge-items
    description: Add or remove items in a fridge

paths:
  # Authentication
  /api/v1/auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
        '409':
          description: Username already exists

  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: Authenticate user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /api/v1/auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh access token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid refresh token

  # Items
  /api/v1/items:
    get:
      tags:
        - items
      operationId: getAllItems
      summary: List all custom items for the current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemResponse'
    post:
      tags:
        - items
      operationId: createItem
      summary: Create a new item
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemRequest'
      responses:
        '201':
          description: Item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '400':
          description: Invalid input

  /api/v1/items/{itemId}:
    get:
      tags:
        - items
      operationId: getItem
      summary: Get a single item
      security:
        - bearerAuth: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '404':
          description: Not found
    put:
      tags:
        - items
      operationId: updateItem
      summary: Update an existing item's name
      security:
        - bearerAuth: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemRequest'
      responses:
        '200':
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '400':
          description: Invalid input
        '404':
          description: Item not found
    delete:
      tags:
        - items
      operationId: deleteItem
      summary: Delete an item
      security:
        - bearerAuth: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted successfully
        '404':
          description: Not found

  # Fridges
  # Fridge-Items

components:
  schemas:
    # Authentication
    RegisterRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          minLength: 3
        password:
          type: string
          format: password
          minLength: 8

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          format: password

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string

    AuthResponse:
      type: object
      properties:
        tokens:
          $ref: '#/components/schemas/Tokens'

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    Tokens:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    # Item Definitions
    CreateItemRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Custom name of the item

    ItemResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdOn:
          type: string
          format: date-time

    UpdateItemRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Updated name of the item

    # Fridges
    # Fridge-Item Instances

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT